an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
View(ls)
View(ls)
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +     ls[[5]]*df$SommeRayonnementJJ[i]
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +     ls[[5]]*df$SommeRayonnementJJ[i]
print(i, ls[[1]], df$MaMerlot...2[i])
}
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +     ls[[5]]*df$SommeRayonnementJJ[i]
print(i)
print(df$MaMerlot...2[i])
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +     ls[[5]]*df$SommeRayonnementJJ[i]
df$MaMerlot...2[i] = df$MaMerlot...2[i] + ls[[1]]
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
View(df)
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +     ls[[5]]*df$SommeRayonnementJJ[i]
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +     ls[[5]]*df$SommeRayonnementJJ[i]
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df['MaMerlot...2'][i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +     ls[[5]]*df$SommeRayonnementJJ[i]
}
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +     ls[[5]]*df$SommeRayonnementJJ[i]
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
print(ls[[1]])
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +      ls[[5]]*df$SommeRayonnementJJ[i]
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +      ls[[5]]*df$SommeRayonnementJJ[i]
print(ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +      ls[[5]]*df$SommeRayonnementJJ[i])
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +      ls[[5]]*df$SommeRayonnementJJ[i]
print(ls[[1]] +  0)
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +      ls[[5]]*df$SommeRayonnementJJ[i]
print(ls[[1]] +  NA)
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
df[is.na(d)] <- 0
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
df[is.na(df)] <- 0
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
df <- df %>% replace(is.na(.), 0)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(gtsummary)
load("vignes.RData")
df = ECSA3_vignobles_bordelais
summary(df)
corrplot(cor(df, use="complete.obs"), tl.cex = 0.5, number.cex = 0.5, order="hclust")
M1_global = lm(MaMerlot...2 ~ NbJrs30JJ + NbJ25_30JJ + NbJ20_25JJ + NbJ15_20JJ + NbJ10_15JJ + SommeTs10JJ
+ SommePluviometrieJJ + SommeRayonnementJJ + NbJrs30JuS + SommeTs10JuS + SommePluviometrieJuS +
SommeRayonnementJuS + NbJ25_30JuS + NbJ20_25JuS + NbJ15_20JuS, data=df)
summary(M1_global)
tbl_regression(M1_global) %>%
as_gt() %>%
gt::tab_header("Modèle global", subtitle = "M1 Global")
M_test = lm(MaMerlot...2 ~ NbJ25_30JJ + NbJ20_25JJ + NbJ15_20JJ + NbJ10_15JJ, data=df)
summary(M_test)
tbl_regression(M_test) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de test")
M1 = lm(MaMerlot...2 ~ NbJrs30JJ + NbJ25_30JJ + NbJ20_25JJ + NbJ15_20JJ + NbJ10_15JJ + SommeTs10JJ
+ SommePluviometrieJJ + SommeRayonnementJJ, data=df)
summary(M1)
tbl_regression(M1) %>%
as_gt() %>%
gt::tab_header("Modèle global", subtitle = "M1 Janvier-Juin")
r1 = summary(M1)$adj.r.squared
M2 = lm(MaMerlot...2 ~ NbJrs30JJ + NbJ25_30JJ + NbJ20_25JJ + NbJ15_20JJ + NbJ10_15JJ + SommeTs10JJ
+ SommeRayonnementJJ, data=df)
summary(M2)
tbl_regression(M2) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "M2 Janvier-Juin")
r2 = summary(M2)$adj.r.squared
M3 = lm(MaMerlot...2 ~ NbJrs30JJ + NbJ25_30JJ + NbJ20_25JJ + NbJ15_20JJ + NbJ10_15JJ + SommeRayonnementJJ, data=df)
summary(M3)
tbl_regression(M3) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "M3 Janvier-Juin")
r3 = summary(M3)$adj.r.squared
M4 = lm(MaMerlot...2 ~ NbJrs30JJ + NbJ25_30JJ + NbJ20_25JJ + NbJ15_20JJ + SommeRayonnementJJ, data=df)
summary(M4)
tbl_regression(M4) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "M4 Janvier-Juin")
r4 = summary(M4)$adj.r.squared
M5 = lm(MaMerlot...2 ~ NbJrs30JJ + NbJ25_30JJ + NbJ20_25JJ + SommeRayonnementJJ, data=df)
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "M5 Janvier-Juin")
r5 = summary(M5)$adj.r.squared
M6 = lm(MaMerlot...2 ~ NbJ25_30JJ + NbJ20_25JJ + SommeRayonnementJJ, data=df)
summary(M6)
tbl_regression(M6) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "M6 Janvier-Juin")
r6 = summary(M6)$adj.r.squared
list_R2_ajusted = list(r1,r2,r3,r4,r5,r6)
lis = list(1,2,3,4,5,6)
plot(lis, list_R2_ajusted,type = "o",pch = 19,xlab="Modèles",ylab="R2 ajusté",
main="R2 ajusté en fonction des modèles")
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
df <- df %>% replace(is.na(.), 0)
# application de la prédiction et ajout des valeurs dans "MaMerlot...2"
for (i in 42:48) {
df$MaMerlot...2[i] = ls[[1]] +  ls[[2]]*df$NbJrs30JJ[i] + ls[[3]]*df$NbJ25_30JJ[i] + ls[[4]]*df$NbJ20_25JJ[i] +      ls[[5]]*df$SommeRayonnementJJ[i]
print(ls[[1]] +  NA)
}
# conversion en date
df$Date <- as.Date(c(NA))
for (i in 42:48) {
an <- as.integer(df$AN[i])
date = paste(toString(an), "-01-01", sep="")
df$Date[i] = as.Date(date) + df$MaMerlot...2[i] # somme entre l'année et le nombre de jours de maturité prédit
}
df <- df %>%
select('Date', everything())
View(df)
summary(M5)
tbl_regression(M5) %>%
as_gt() %>%
gt::tab_header("Sous-modèle", subtitle = "Modèle de prédiction Janvier-Juin")
# y0 = x0T*B = (1 x1 x2 x3 x4)(     323.5    )
#                             (    -0.7752   )
#                             (    -0.9834   )
#                             (    -0.4623   )
#                             (   -0.0001595 )
ls <- list()
# créer une liste avec les coefficients beta du modèle
for (i in 1:length(M5$coefficients)) {
ls = append(ls, summary(M5)$coefficients[i])
}
df <- df %>% replace(is.na(.), 0) # remplacer NA par des 0 (éviter une erreur lorsqu'il y a une somme entre une valeur et NA)
library(rpart)# Pour l’arbre de décision
library(rpart.plot) # Pour la représentation de l’arbre de décision
#Chargement des données
data = read.csv2("data.csv", sep = ",")
setwd("C:/Users/ka/Desktop/CARF-RF/CART_R")
library(rpart)# Pour l’arbre de décision
library(rpart.plot) # Pour la représentation de l’arbre de décision
#Chargement des données
data = read.csv2("data.csv", sep = ",")
#Description des données
summary(data)
data$X2 = as.numeric(data$X2)
data
#Construction de l’arbre
data.Tree <- rpart(Y~.,data=data,method= "class", control=rpart.control(minsplit=0,cp=0))
plot(data.Tree, uniform=TRUE, branch=0.5, margin=0.1)
text(data.Tree, all=TRUE, use.n=TRUE)
prp(data.Tree)
#On cherche à minimiser l’erreur pour définir le niveau d’élagage
plotcp(data.Tree)
#Affichage du cp optimal
print(data.Tree$cptable[which.min(data.Tree$cptable[,4]),1])
#Elagage de l’arbre avec le cp optimal
data.Tree_Opt <- prune(data.Tree,cp=data.Tree$cptable[which.min(data.Tree$cptable[,4]),1])
prp(data.Tree_Opt,extra=0)
#Construction de l’arbre
data.Tree <- rpart(Y~.,data=data,method= "class", control=rpart.control(minsplit=0,cp=0))
plot(data.Tree, uniform=TRUE, branch=0.5, margin=0.1)
text(data.Tree, all=TRUE, use.n=TRUE)
prp(data.Tree)
#Elagage de l’arbre avec le cp optimal
data.Tree_Opt <- prune(data.Tree,cp=data.Tree$cptable[which.min(data.Tree$cptable[,4]),1])
prp(data.Tree_Opt,extra=0)
#Construction de l’arbre
data.Tree <- rpart(Y~.,data=data,method= "class", control=rpart.control(minsplit=0,cp=0))
plot(data.Tree, uniform=TRUE, branch=0.5, margin=0.1)
text(data.Tree, all=TRUE, use.n=TRUE)
prp(data.Tree)
